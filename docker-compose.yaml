services:
  bot:
    container_name: ${BOT_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_CONTAINER_NAME}
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    #command: uv run python bot/migrator.py
    networks:
      - database
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:14
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
     - "19111:5432"
    volumes:
     - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - database
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  database:
    driver: bridge
